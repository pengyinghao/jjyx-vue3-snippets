{
  "templateLang": {
    "prefix": "flow-page",
    "body": [
      "<template>",
      "  <PageContainer :content-padding=\"false\">",
      "    <template #left>创建实例</template>",
      "    <template #right>",
      "      <div @click=\"onBack\">返回</div>",
      "    </template>",

      "    <div class=\"flow-step w-full bg-[#f0f2f5]\">",
      "      <div class=\"w-800px h-48px flex items-center m-auto justify-center\">",
      "        <a-steps :current=\"current\">",
      "          <a-step v-for=\"item in steps\" :key=\"item\" :title=\"item.title\" />",
      "        </a-steps>",
      "     </div>",
      "    </div>",
      "    <div class=\"flow-content flex-1 p-10px\">",
      "      <keep-alive :include=\"includeComponentName\">",
      "        <component :is=\"dynamicComponent\"></component>",
      "      </keep-alive>",
      "    </div>",
      "    <div",
      "      class=\"flow-footer border-t-0.5px border-[#e9e9e9] x-line text-right pt-10px pb-10px pr-16px pl-16px\"",
      "     >",
      "      <a-button v-if=\"current > 0\" @click=\"current--\">上一步</a-button>",
      "      <a-button v-if=\"current < steps.length - 1\" type=\"primary\" @click=\"current++\">",
      "        下一步",
      "       </a-button>",
      "      <a-button v-if=\"current == steps.length - 1\" type=\"primary\" @click=\"onDone\"> 完成 </a-button>",
      "    </div>",
      "  </PageContainer>",
      "</template>",
      "<script lang=\"ts\" setup name=\"FlowPage\">",
      "import FirstComponent from './firstComponent.vue'",
      "import SecondComponent from './secondComponent.vue'",
      "import LastComponent from './lastComponent.vue'",
      "interface State {",
      "  /** 当前步骤 */",
      "  current: number",
      "  /** 缓存组件的名称 */",
      "  includeComponentName: string[]",
      "}",
      "const router = useRouter()",
      "const state = reactive<State>({",
      "  current: 0,",
      "  includeComponentName: []",
      "})",
      "const { current, includeComponentName } = toRefs(state)",

      "const steps: Steps[] = [",
      "  { title: '第一步', component: FirstComponent },",
      "  { title: '最后一步', component: SecondComponent },",
      "  { title: '最后一步', component: LastComponent }",
      "]",

      "/** 动态组件 */",
      "const dynamicComponent = computed(() => {",
      "  return steps[state.current].component",
      "})",

      "/** 完成按钮单击事件 */",
      "const onDone = () => {",
      "  window.$message.success('完成')",
      "  router.replace('/test-searchInput')",
      "}",

      "/** 返回按钮单击事件 */",
      "function onBack() {",
      "  state.includeComponentName = []",
      "  router.go(-1)",
      "}",
      "</script>",
      "<style lang=\"scss\" scoped></style>"
    ],
    "description": "流程模板"
  },
  "styleLang": {
    "prefix": "style",
    "body": ["<style lang=\"scss\" scoped>", "</style>"],
    "description": "样式"
  }
}

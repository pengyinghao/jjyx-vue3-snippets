{
  "templateLang": {
    "prefix": "flow-modal",
    "body": [
      "<template>",
      "  <c-modal",
      "    v-model:visible=\"visible\"",
      "    width=\"950px\"",
      "    :closable=\"false\"",
      "    class=\"flow\"",
      "    @cancel=\"onCancel(false)\"",
      "    @ok=\"onOk\"",
      "  >",
      "    <div class=\"flow-header\">",
      "      <div class=\"flex align-center\">",
      "         <div class=\"c-white text-16px flex-1\">标题</div>",
      "         <div class=\"cursor-pointer close-icon transition\" @click=\"onCancel(false)\">",
      "          <Icon name=\"ant-design:close-outlined\"></Icon>",
      "        </div>",
      "      </div>",
      "      <div class=\"mt-5px text-12px\">详细描述</div>",
      "      <div class=\"mt-12px\">",
      "        <a-steps :current=\"current\">",
      "          <a-step v-for=\"item in steps\" :key=\"item.title\" :title=\"item.title\" />",
      "        </a-steps>",
      "      </div>",
      "    </div>",
      "    <div class=\"flow-content\">",
      "      <keep-alive :include=\"includeComponentName\">",
      "        <component :is=\"dynamicComponent\"></component>",
      "      </keep-alive>",
      "    </div>",
      "    <template #footer>",
      "      <a-button v-if=\"current > 0\" style=\"margin-left: 8px\" @click=\"current--\">上一步</a-button>",
      "      <a-button v-if=\"current < steps.length - 1\" type=\"primary\" @click=\"current++\">",
      "        下一步",
      "      </a-button>",
      "      <a-button v-if=\"current == steps.length - 1\" type=\"primary\" @click=\"onDone\"> 完成 </a-button>",
      "    </template>",
      "  </c-modal>",
      "</template>",
      "<script lang=\"ts\" setup>",
      "import { CModal } from '@/components/antdExtend/index'",
      "import Icon from '@/components/Icon/Icon.vue'",
      "import FirstComponent from './firstComponent.vue'",
      "import SecondComponent from './secondComponent.vue'",
      "import LastComponent from './lastComponent.vue'",

      "interface FlowState extends State {",
      "  /** 当前步骤 */",
      "  current: number",
      "  /** 缓存组件的名称 */",
      "  includeComponentName: string[]",
      "}",

      "const emits = defineEmits([\"close\"])",
      "const state = reactive<FlowState>({",
      "  visible: false,",
      "  loading: false,",
      "  current: 0,",
      "  includeComponentName: []",
      "})",

      "const steps: Steps[] = [",
      "  { title: '第一步', component: FirstComponent },",
      "  { title: '最后一步', component: SecondComponent },",
      "  { title: '最后一步', component: LastComponent }",
      "]",

      "const { visible, current, includeComponentName } = toRefs(state)",
      "const dynamicComponent = computed(() => {",
      "  return steps[state.current].component",
      "})",

      "/** 打开窗口 */",
      "function showModal() {",
      "  state.visible = true",
      "  state.includeComponentName = ['FirstComponent', 'SecondComponent', 'LastComponent']",
      "}",

      "/** 按钮提交单击事件 */",
      "function onOk() {",
      "  onCancel(true)",
      "}",

      "/** 窗口关闭按钮单击事件 */",
      "function onCancel(isRefreshData = false) {",
      "  state.visible = false",
      "  state.includeComponentName = []",
      "  state.current = 0",
      "  emits('close', isRefreshData)",
      "}",

      "/** 完成 */",
      "function onDone() {",
      "  window.$message.success('Processing complete!')",
      "}",

      "defineExpose({",
      "  showModal",
      "})",
      "</script>"
    ],
    "description": "模态框步骤模板"
  },
  "styleLang": {
    "prefix": "style",
    "body": ["<style lang=\"less\" scoped>", "</style>"],
    "description": "样式"
  }
}
